###
# Copyright (2016-2019) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- hosts: all
  vars:
    config: "{{ playbook_dir }}/oneview_config.json"
    logical_interconnect_name: "SYN03_LE-SYN03_LIG" # Set the name of a Logical interconnect to run the playbook
    network_name: "eth77" # Set the name of an existent Ethernet Network to update the internal networks
    firmware_driver: "HPE Synergy Custom SPP 2018110 2019 02 15, 2019.02.15.00" # Set the SPP filename to install it
    scope_uris: # List of scope URIs to be used in the 'scopes_updated' state
      - "/rest/scopes/74877630-9a22-4061-9db4-d12b6c4cfee0"     
  tasks:
    - name: Update the Ethernet interconnect settings for the logical interconnect
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: ethernet_settings_updated
        data:
          name: "{{ logical_interconnect_name }}"
          ethernetSettings:
            macRefreshInterval: 11
      delegate_to: localhost

    - name: Update the Internal Networks on the logical interconnect
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: internal_networks_updated
        data:
          name: "{{ logical_interconnect_name }}"
          internalNetworks:
            - name: "{{ network_name }}"  # could also be a URI. e.g.: - uri: '/rest/ethernet-network/<id>'
      when: network_name is defined
      delegate_to: localhost
# Below task is supported only with OneView 3.10
    - name: Update the Interconnect Settings
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: settings_updated
        data:
          name: "{{ logical_interconnect_name }}"
          ethernetSettings:
            macRefreshInterval: 12
      delegate_to: localhost

    - name: Generate the forwarding information base dump file for the logical interconnect
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: forwarding_information_base_generated
        data:
          name: "{{ logical_interconnect_name }}"
      delegate_to: localhost
      register: result

    - debug: msg="{{ result.msg }}"

    - name: Update the QoS aggregated configuration for the logical interconnect
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: qos_aggregated_configuration_updated
        data:
          name: "{{ logical_interconnect_name }}"
          qosConfiguration:
            activeQosConfig:
              category: 'qos-aggregated-configuration'
              configType: 'Passthrough'
              downlinkClassificationType: ~
              uplinkClassificationType: ~
              qosTrafficClassifiers: []
              type: 'QosConfiguration'
      delegate_to: localhost
      register: result

    - name: Update the SNMP configuration for the logical interconnect
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: snmp_configuration_updated
        data:
          name: "{{ logical_interconnect_name }}"
          snmpConfiguration:
            enabled: True
            readCommunity: "public"    
      delegate_to: localhost

    - name: Update the port monitor configuration of the logical interconnect
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: port_monitor_updated
        data:
          name: "{{ logical_interconnect_name }}"
          portMonitor:
            enablePortMonitor: False
      delegate_to: localhost

    - name: Update the configuration on the logical interconnect
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: configuration_updated
        data:
          name: "{{ logical_interconnect_name }}"
      delegate_to: localhost

    - name: Updates the telemetry configuration of a logical interconnect.
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: telemetry_configuration_updated
        data:
          name: "{{ logical_interconnect_name }}"
          telemetryConfiguration:
            sampleCount: 12
            enableTelemetry: True
            sampleInterval: 300
      delegate_to: localhost

    - debug: var=telemetry_configuration

# Below task is supported only with OneView 3.10
    - name: Update the Logical Interconnect with two scopes
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: scopes_updated
        data:
          name: "{{ logical_interconnect_name }}"
          scopeUris: "{{ scope_uris }}"
      delegate_to: localhost

    - debug: var=scope_uris

    - name: Install a firmware to the logical interconnect, running the stage operation to upload the firmware
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: firmware_installed
        data:
          name: "{{ logical_interconnect_name }}"
          firmware:
            command: Stage
            spp: "{{ firmware_driver }}"  # could also be a sppUri. e.g.: - sppUri: '/rest/firmware-drivers/<filename>'
      when: firmware_driver is defined
      delegate_to: localhost

    - name: Return the Logical Interconnect to a consistent state
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: compliant
        data:
          name: "{{ logical_interconnect_name }}"
      delegate_to: localhost
